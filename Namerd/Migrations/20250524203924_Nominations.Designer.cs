// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Namerd.Persistence.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Namerd.Migrations
{
    [DbContext(typeof(NamerdContext))]
    [Migration("20250524203924_Nominations")]
    partial class Nominations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Namerd.Domain.NamerdBot", b =>
                {
                    b.Property<decimal>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<int>("SettingsId")
                        .HasColumnType("integer");

                    b.HasKey("GuildId");

                    b.HasIndex("SettingsId");

                    b.ToTable("Bots");
                });

            modelBuilder.Entity("Namerd.Domain.Nomination", b =>
                {
                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Guid>("NominationPeriodId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "NominationPeriodId");

                    b.HasIndex("NominationPeriodId");

                    b.ToTable("Nominations");
                });

            modelBuilder.Entity("Namerd.Domain.NominationPeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("botId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("botId");

                    b.ToTable("NominationPeriods");
                });

            modelBuilder.Entity("Namerd.Domain.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("NominateChannelId")
                        .HasColumnType("numeric(20,0)");

                    b.Property<DateTime>("NominateEndTimeUTC")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("Namerd.Domain.NamerdBot", b =>
                {
                    b.HasOne("Namerd.Domain.Settings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("Namerd.Domain.Nomination", b =>
                {
                    b.HasOne("Namerd.Domain.NominationPeriod", "NominationPeriod")
                        .WithMany("Nominations")
                        .HasForeignKey("NominationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NominationPeriod");
                });

            modelBuilder.Entity("Namerd.Domain.NominationPeriod", b =>
                {
                    b.HasOne("Namerd.Domain.NamerdBot", "bot")
                        .WithMany("NominationPeriods")
                        .HasForeignKey("botId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bot");
                });

            modelBuilder.Entity("Namerd.Domain.NamerdBot", b =>
                {
                    b.Navigation("NominationPeriods");
                });

            modelBuilder.Entity("Namerd.Domain.NominationPeriod", b =>
                {
                    b.Navigation("Nominations");
                });
#pragma warning restore 612, 618
        }
    }
}
